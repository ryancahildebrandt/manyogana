# Doc Setup----
library(readr)
library(tabulizer)
library(rvest)
library(pdftables)
library(janitor)
library(data.table)
library(reshape2)
library(tidyverse)
library(magrittr)
library(zipangu)
library(udpipe)
#put in renv chunk

#Notes----

# input japanese text 
# parse into tokens

# kanji words: leave meaning as much as possible
# particles: convert, using set manyogana
# conjugations: convert, using set manyogana
# n: nu, maybe mu
# kana words: convert straight away, ith meaning proximity consideration

# output manyogana transcription


# In the poem, the sounds mo (母, 毛) and shi (之, 思) are written with multiple, different characters. While all particles and most words are represented phonetically (e.g., 多太 tada, 安佐 asa), the words ji (路), umi (海) and funekaji (船梶) are rendered semantically.
# In some cases, specific syllables in particular words are consistently represented by specific characters. This usage is known as Jōdai Tokushu Kanazukai. This usage has led historical linguists to conclude that certain disparate sounds in Old Japanese, consistently represented by differing sets of man'yōgana characters, may have merged since then.
# Shakuon kana (借音仮名) are based on a Sino-Japanese on'yomi reading, in which one character represents either one mora or two morae.[6]
# Shakkun kana (借訓仮名) are based on a native kun'yomi reading, one to three characters represent one to three morae.[6]
# The vocalic distinction (1 versus 2) is very important linguistically, but for literary purposes (or while reading for pleasure) it can be ignored – as it often is in Japanese works, hence no differentiation is usually made in the hiragana transcription. 

#Scrape & Reference DFs----

#wikipedia scrape
wikiurl <- read_html("https://en.wikipedia.org/wiki/Man%27y%C5%8Dgana") %>%
  html_nodes("table.wikitable") %>%
  html_table(fill = TRUE)
wiki_example <- wikiurl[1] %>% data.frame(.)
wiki_shakuon <- wikiurl[2] %>% data.frame(.)
wiki_shakkun <- wikiurl[3] %>% data.frame(.)
wiki_katakana <- wikiurl[5] %>% data.frame(.)
wiki_hiragana <- wikiurl[6] %>% data.frame(.)

wiki_manyogana <- wikiurl[4] %>% 
  data.frame(.) %>%
  mutate(., X1 = ifelse(.$X1 %in% "", "_", .$X1)) %>% 
  row_to_names(., row_number = 1) %>%
  melt(., id = "_") %>% 
  mutate(., 
         "mora" = gsub("[12–]","", paste0(.$variable, .$"_")),
         "漢字" = str_split(.$value,"")) %>%
  mutate(., "mora" = case_when(
    gsub("[12–]","", paste0(.$variable, .$"_")) == "Si" ~ "Shi",
    gsub("[12–]","", paste0(.$variable, .$"_")) == "Ti" ~ "Chi",
    gsub("[12–]","", paste0(.$variable, .$"_")) == "Tu" ~ "Tsu",
    gsub("[12–]","", paste0(.$variable, .$"_")) == "Zi" ~ "Ji",
    gsub("[12–]","", paste0(.$variable, .$"_")) == "Di" ~ "Ji",
    gsub("[12–]","", paste0(.$variable, .$"_")) == "Du" ~ "Dzu",
    TRUE ~ .$mora)) %>% 
  mutate(., "かな" = str_conv_romanhira(.$mora, "hiragana")) %>%
  filter(., 漢字 != "character(0)") %>%
  select(., "かな", "漢字") %>% 
  pivot_wider(.,
              names_from = かな, 
              values_from = 漢字,
              values_fn=list) %>% 
  t(.) %>% 
  as.data.frame(.) %>% 
  mutate(., 
         "かな" = rownames(.),
         "漢字" = sapply(sapply(wiki_manyogana$V1, simplify, USE.NAMES = FALSE), unique)) %>% 
  select(., "かな", "漢字")


#NLP---- 
exin <- c("私は韓国へ行くつもりです.")
udmodel_file <- udpipe_download_model(language= "japanese")
udmodel_jp <- udpipe_load_model(file = udmodel_file$file_model)

ud_df<-udpipe_annotate(udmodel_jp, x=exin) %>% 
  as.data.frame(.)




